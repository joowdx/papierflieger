map $http_upgrade $connection_upgrade {
  default upgrade;
  ''      close;
}

server {
  listen 80;
  listen [::]:80;

  server_name _;

  return 301 https://$host$request_uri;
}

server {
  listen 443 ssl http2;
  listen [::]:433 ssl http2;

  server_name _;

  ssl_certificate             /usr/share/nginx/html/docker/private/localhost.crt;
  ssl_certificate_key         /usr/share/nginx/html/docker/private/localhost.key;

  ssl_session_cache           shared:SSL:10m;
  ssl_session_tickets         off;
  ssl_session_timeout         10m;

  ssl_protocols               TLSv1.2 TLSv1.3;
  ssl_prefer_server_ciphers   on;
  ssl_dhparam                 /usr/share/nginx/html/docker/private/dhparam.pem;

  ssl_ciphers                 TLS13-AES-256-GCM-SHA384:TLS13-CHACHA20-POLY1305-SHA256:TLS_AES_256_GCM_SHA384:TLS-AES-256-GCM-SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS-CHACHA20-POLY1305-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA;
  ssl_ecdh_curve              secp384r1;

  ssl_stapling                on;
  ssl_stapling_verify         on;

  add_header                  X-Frame-Options SAMEORIGIN;
  add_header                  X-Content-Type-Options nosniff;
  add_header                  X-XSS-Protection "1; mode=block";

  root /var/www/html/public;

  charset utf-8;

  client_max_body_size 4M;

  index index.php;

  location /index.php {
    try_files 404 @octane;
  }

  location / {
    try_files $uri $uri/ @octane;
  }

  location = /favicon.ico {
    alias /var/www/html/public/favicon.svg;
  }

  location = /robots.txt  {
    access_log off;
    log_not_found off;
  }

  location ~ /\.(?!well-known).* {
    deny all;
    access_log off;
    log_not_found off;
  }

  access_log off;

  error_log  /var/log/nginx/octane-error.log error;

  error_page 404 /index.php;

  location @octane {
    proxy_http_version 1.1;
    proxy_set_header Host $http_host;
    proxy_set_header Scheme $scheme;
    proxy_set_header SERVER_PORT $server_port;
    proxy_set_header REMOTE_ADDR $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    proxy_pass http://volt-app:8000;
  }
}

server {
    listen 6002 ssl http2;
    listen [::]:6002 ssl http2;
    server_name _;
    server_tokens off;
    root /var/www/html/public;

    ssl_certificate             /usr/share/nginx/html/docker/private/localhost.crt;
    ssl_certificate_key         /usr/share/nginx/html/docker/private/localhost.key;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers TLS13-AES-256-GCM-SHA384:TLS13-CHACHA20-POLY1305-SHA256:TLS_AES_256_GCM_SHA384:TLS-AES-256-GCM-SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS-CHACHA20-POLY1305-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA;
    ssl_prefer_server_ciphers on;
    ssl_dhparam                 /usr/share/nginx/html/docker/private/dhparam.pem;

    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Content-Type-Options "nosniff";

    index index.html index.htm index.php;

    charset utf-8;

    location / {
      proxy_pass             http://volt-websocket:6001;
      proxy_read_timeout     60;
      proxy_connect_timeout  60;
      proxy_redirect         off;

      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection 'upgrade';
      proxy_set_header Host $host;
      proxy_cache_bypass $http_upgrade;
    }

    access_log off;

    error_log  /var/log/nginx/soketi-error.log error;
}
